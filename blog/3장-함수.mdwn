[개발자 책읽기] 클린 코드-애자일 소프트웨어 장인 정신 (n장 제목)

> 해당 글은 Robert C.Martin **클린 코드** 라는 책을 읽고 학습한 내용을 정리 및 회고하는 글 입니다. 자세한 사항은 [YES 24 클린 코드 - 애자일 소프트웨어 장인 정신](http://www.yes24.com/Product/Goods/11681152) 에서 확인해주세요.

#### **클린 코드** - 애자일 소프트웨어 장인 정신 (Uncle Bob)

- 위키북스
- 지은이: Robert C.Martin (Uncle Bob)
- 옮긴이: 박재호, 이해영

[##_Image|kage@b9ygf9/btrr9gXuJLT/c0H8kDAQIeYzVNO0yolpn1/img.png|CDM|1.3|{"originWidth":1440,"originHeight":1440,"style":"alignCenter","width":468,"height":468}_##]

---

# 이번 장에서 이야기하고자 하는 것

- 작게 만들어라
  - 한 함수는 6 ~ 7 줄 정도로 표현할 수 있어야 한다.
  - 중첩된 `if / while / for` 를 사용하지 않아야 한다.
  - 그래야 읽기 편해지고 이해하기 쉬워진다.
- 한 가지만 해라
  - 함수는 한 가지를 해야 한다. 그 한 가지를 잘 해야 한다. 그 한 가지만을 해야 한다.
- 함수 당 추상화 수준은 하나로
  - 함수가 확실히 한 가지를 하기 위해서는 함수 내 모든 문장의 추상화 수준이 동일해야 함
    - `render()` 는 높은 추상화
    - `Http.get(uri)` 는 중간 추상화
    - `String.valueOf("abs");` 는 낮은 추상화ㄴ
  - 한 함수 내에서 추상화 수준이 섞여있으면 읽는 사람이 헷갈림
- 서술적인 이름을 사용해라
  - 코드를 읽으면서 짐작했던 기능을 각 루틴이 그대로 수행한다면 깨꿋한 코드라고 부른다는 워드의 말
  - 이름이 짧고 어려운 이름보다 서술적 이름이 더 좋다
  - 이름을 정하느라 시간을 들여도 괜찮다
- 함수 인수
  - 관점에 따라
    - 가독성의 관점
      - 이상적인 함수 인수는 0개 이며 1, 2, 3 순차적으로 간다
      - 읽는 사람은 `void convert(String a, char[] b)` 보다 `void convert()` 가 더 직관적이다
    - 테스트 코드의 관점
      - 인수가 3개라면 그 만큼 조합해야할 테스트 케이스가 늘어난다.
  - 최선은 인수가 0개, 차선은 인수가 1개
  - 플래그 인수는 한 번에 여러가지를 한다고 하는 것이므로 매우 좋지 않다.
    - true 면 이것을 하고 false 면 저것을 하기 때문
  - 동사와 키워드를 조합하라
- 명령과 조회를 분리하라
  - 함수는 무언가를 수행하거나 무언가에게 답하거나! 둘 중에 하나만 해야 한다.

# 나의 해석과 회고

- 함수 인수를 읽고 있으니 정규님이 assertEquals 보다 assertThat().isEqualTo() 를 더 선호한다는 것이 생각남
- 동사와 키워드를 조합하라
  - `assertEquals()` 보다 `assertExpectedEqualsActual(expected, actual)` 이 더 좋다
    - notificator 의 `findBy(NotificationType)` 보다 `findByNotificationType(NotificationType)` 이 더 좋은것이 아닐까?
