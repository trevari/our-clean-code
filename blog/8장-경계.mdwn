[개발자 책읽기] 클린 코드-애자일 소프트웨어 장인 정신 (8장 경계)

> 해당 글은 Robert C.Martin **클린 코드** 라는 책을 읽고 학습한 내용을 정리 및 회고하는 글 입니다. 자세한 사항은 [YES 24 클린 코드 - 애자일 소프트웨어 장인 정신](http://www.yes24.com/Product/Goods/11681152) 에서 확인해주세요.

#### **클린 코드** - 애자일 소프트웨어 장인 정신 (Uncle Bob)

- 위키북스
- 지은이: Robert C.Martin (Uncle Bob)
- 옮긴이: 박재호, 이해영

[##_Image|kage@b9ygf9/btrr9gXuJLT/c0H8kDAQIeYzVNO0yolpn1/img.png|CDM|1.3|{"originWidth":1440,"originHeight":1440,"style":"alignCenter","width":468,"height":468}_##]

---

# 이번 장에서 이야기하고자 하는 것

소프트웨어 경계를 깔끔하게 처리하는 기법과 기교를 설명한다

- 우리가 통제할 수 없는 코드
  - 외부 모듈, 라이브러리 등등
    - 이를 학습하기 위해 너무 많은 시간을 쏟지 않는 것이 좋다.
    - 우리가 통제하지 못하는 상황에 이를 수 있다
      - ex) 스펙 변경
- 외부 코드를 사용할 때 어떻게 쉽고 빠르게 사용할 수 있을까?
  - 문서를 읽는다?
    - 시간이 오래 걸린다.
  - 테스트 코드를 작성한다.
    - 테스트 코드를 작성하며 테스트를 통과시키면서 외부 코드를 익힌다.
      - 짐 뉴커크는 이를 학습 테스트라고 하였다.
    - 우리가 사용할 방식대로 외부 API 를 호출하고 API 를 성공시킬 수 있도록 한다.
      - 사용법을 익히는 것에 초점을 둔다
    - 테스트가 성공하면 우리가 독자적으로 만든 클래스로 감싸서 사용한다
- 어떻게 안전하게 사용할 수 있을까?
  - 우리가 개발한 소스코드와 혼동되지 않도록 한다.
  - 아는 코드와 모르는 코드의 경계를 두어 해결한다.
  - 통제가 불가능한 외부 패키지에 의존하는 대신 통제가 가능한 우리의 코드에 의존하는 것이 훨씬 좋다

# 나의 해석과 회고

- 학습 테스트
  - 외부 SMS 모듈개발하면서 느낀점
    - 나도 모르는 사이에 학습 테스트를 진행했다
  - 타입스크립트를 개발할 때 빠르게 사용법을 익히기 위해서 작은 것 부터 하나씩 문제를 해결해나가며 하나의 기능을 완성함
  - FakeContainer 를 이용해서 미지의 영역을 커버한다
- 통제가 가능한 곳과 불가능한 곳의 경계
  - Iamport 에 접근하여
