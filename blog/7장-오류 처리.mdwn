[개발자 책읽기] 클린 코드-애자일 소프트웨어 장인 정신 (7장 오류 처리)

> 해당 글은 Robert C.Martin **클린 코드** 라는 책을 읽고 학습한 내용을 정리 및 회고하는 글 입니다. 자세한 사항은 [YES 24 클린 코드 - 애자일 소프트웨어 장인 정신](http://www.yes24.com/Product/Goods/11681152) 에서 확인해주세요.

#### **클린 코드** - 애자일 소프트웨어 장인 정신 (Uncle Bob)

- 위키북스
- 지은이: Robert C.Martin (Uncle Bob)
- 옮긴이: 박재호, 이해영

[##_Image|kage@b9ygf9/btrr9gXuJLT/c0H8kDAQIeYzVNO0yolpn1/img.png|CDM|1.3|{"originWidth":1440,"originHeight":1440,"style":"alignCenter","width":468,"height":468}_##]

---

# 이번 장에서 이야기하고자 하는 것

이번 장에서는 오류 처리 (Exception Handling) 에 대해서 말한다.

#### 애플리케이션에서 오류를 정의할 때 프로그래메에게 가장 중요한 관심사는 **오류를 잡아내는 방법이 되어야 한다**

- 오류 코드보단 예외를 사용하라
  - 오류 코드를 정의하는 것은 한 번에 한 가지를 하지 않을 확률이 높다.
  - 오류 코드보단 예외를 통해서 한 번에 한 가지를 할 수 있도록 하자
- Unckecked Exception 을 사용하라
  - Checked Exception 은 OCP 를 위반할 가능성이 높다.
    - 메서드에서 Checked Exception 을 throw 한다면 이를 사용하는 클라이언트 코드에서는 모두 Checked Exception 을 처리해야 하므로 OCP를 위반한다
  - `C#`, `C++` 은 Checked Exception 을 지원하지 않는다.
- 예외에 의미를 제공하라
  - 예외를 던질 때에는 오류 메시지에 정보를 담을 수 있도록 하자
  - catch 에서 오류를 기록할 수 있도록 하라
- 외부 API 를 사용할 때는 Wrapper 를 사용하라
  - 외부 API 를 이용할 때는 외부 라이브러리와 시스템 사이의 의존성을 줄이기 위해 Wrapper 를 정의하고 Wrapper 에서 그와 관련된 에러를 처리하라
  - 이렇게 된다면 테스트 코드를 작성할 때도 좋은 영향을 미친다
- Null 에 대한 고민
  - Null 을 반환하지 말아라
    - Null 을 반환한다는 것은 Caller 에게 문제를 떠넘기는 것이다.
  - Null 을 전달하지 말아라

#### 깨끗한 코드는 읽기도 좋아야 하지만 안정성도 높아야 한다. 이 둘은 상충하는 목표가 아니다.

# 나의 해석과 회고

- 외부 API 를 사용할 때는 Wrapper 를 사용해라
  - 실제 Toast API 를 보냈던 적
  - 처음에는 Toast API 를 보내는 코드와 결과를 처리하는 코드가 하나의 로직에 존재했음
  - 이후에 ToastService 라는 Wrapper 를 만들었고 Wrapper 에서 API 호출 후 파싱하고 관련된 에러만 처리함
    - 이로 인해 테스트 코드가 작성하기 편해졌음
